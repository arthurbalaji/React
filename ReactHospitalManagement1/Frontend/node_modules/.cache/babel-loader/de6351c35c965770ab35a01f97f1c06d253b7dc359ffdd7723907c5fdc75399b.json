{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARTHUR BALAJI R\\\\Desktop\\\\react\\\\ReactHospitalManagement1\\\\Frontend\\\\src\\\\components\\\\AppointmentManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentManagement() {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [newAppointment, setNewAppointment] = useState({\n    name: '',\n    date: '',\n    time: '',\n    doctor: ''\n  });\n  const [editingIndex, setEditingIndex] = useState(null); // Tracks the appointment being edited\n\n  // Fetch appointments from the local API (GET request)\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/appointments').then(response => setAppointments(response.data)).catch(error => console.error('Error fetching appointments:', error));\n  }, []);\n\n  // Add a new appointment (POST request)\n  const addAppointment = () => {\n    axios.post('http://localhost:5000/api/appointments', newAppointment).then(response => {\n      setAppointments([...appointments, response.data]);\n      setNewAppointment({\n        name: '',\n        date: '',\n        time: '',\n        doctor: ''\n      });\n    }).catch(error => console.error('Error adding appointment:', error));\n  };\n\n  // Update an appointment (PUT request)\n  const updateAppointment = () => {\n    axios.put(`http://localhost:5000/api/appointments/${editingIndex}`, newAppointment).then(response => {\n      setAppointments(appointments.map(appointment => appointment.id === editingIndex ? response.data : appointment));\n      setNewAppointment({\n        name: '',\n        date: '',\n        time: '',\n        doctor: ''\n      });\n      setEditingIndex(null); // Reset editing state\n    }).catch(error => console.error('Error updating appointment:', error));\n  };\n\n  // Edit an appointment (load data into form)\n  const editAppointment = id => {\n    const appointmentToEdit = appointments.find(appointment => appointment.id === id);\n    setNewAppointment({\n      name: appointmentToEdit.name,\n      date: appointmentToEdit.date,\n      time: appointmentToEdit.time,\n      doctor: appointmentToEdit.doctor\n    });\n    setEditingIndex(id); // Set the index of the appointment being edited\n  };\n\n  // Delete an appointment (DELETE request)\n  const deleteAppointment = id => {\n    axios.delete(`http://localhost:5000/api/appointments/${id}`).then(() => {\n      setAppointments(appointments.filter(appointment => appointment.id !== id));\n    }).catch(error => console.error('Error deleting appointment:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Appointment Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Patient Name\",\n        value: newAppointment.name,\n        onChange: e => setNewAppointment({\n          ...newAppointment,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Date\",\n        value: newAppointment.date,\n        onChange: e => setNewAppointment({\n          ...newAppointment,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"Time\",\n        value: newAppointment.time,\n        onChange: e => setNewAppointment({\n          ...newAppointment,\n          time: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Doctor\",\n        value: newAppointment.doctor,\n        onChange: e => setNewAppointment({\n          ...newAppointment,\n          doctor: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), editingIndex === null ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addAppointment,\n        children: \"Add Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateAppointment,\n        children: \"Update Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appointments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No appointments available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [appointment.name, \" - \", appointment.date, \" at \", appointment.time, \" with \", appointment.doctor, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editAppointment(appointment.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteAppointment(appointment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), \" \"]\n      }, appointment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentManagement, \"yvbYNPj1MWgRH27hzFUJZrqYPiU=\");\n_c = AppointmentManagement;\nexport default AppointmentManagement;\nvar _c;\n$RefreshReg$(_c, \"AppointmentManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AppointmentManagement","_s","appointments","setAppointments","newAppointment","setNewAppointment","name","date","time","doctor","editingIndex","setEditingIndex","get","then","response","data","catch","error","console","addAppointment","post","updateAppointment","put","map","appointment","id","editAppointment","appointmentToEdit","find","deleteAppointment","delete","filter","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/ARTHUR BALAJI R/Desktop/react/ReactHospitalManagement1/Frontend/src/components/AppointmentManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\n\r\nfunction AppointmentManagement() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [newAppointment, setNewAppointment] = useState({ name: '', date: '', time: '', doctor: '' });\r\n  const [editingIndex, setEditingIndex] = useState(null); // Tracks the appointment being edited\r\n\r\n  // Fetch appointments from the local API (GET request)\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/appointments')\r\n      .then(response => setAppointments(response.data))\r\n      .catch(error => console.error('Error fetching appointments:', error));\r\n  }, []);\r\n\r\n  // Add a new appointment (POST request)\r\n  const addAppointment = () => {\r\n    axios.post('http://localhost:5000/api/appointments', newAppointment)\r\n      .then(response => {\r\n        setAppointments([...appointments, response.data]);\r\n        setNewAppointment({ name: '', date: '', time: '', doctor: '' });\r\n      })\r\n      .catch(error => console.error('Error adding appointment:', error));\r\n  };\r\n\r\n  // Update an appointment (PUT request)\r\n  const updateAppointment = () => {\r\n    axios.put(`http://localhost:5000/api/appointments/${editingIndex}`, newAppointment)\r\n      .then(response => {\r\n        setAppointments(appointments.map(appointment => \r\n          appointment.id === editingIndex ? response.data : appointment\r\n        ));\r\n        setNewAppointment({ name: '', date: '', time: '', doctor: '' });\r\n        setEditingIndex(null); // Reset editing state\r\n      })\r\n      .catch(error => console.error('Error updating appointment:', error));\r\n  };\r\n\r\n  // Edit an appointment (load data into form)\r\n  const editAppointment = (id) => {\r\n    const appointmentToEdit = appointments.find(appointment => appointment.id === id);\r\n    setNewAppointment({ \r\n      name: appointmentToEdit.name, \r\n      date: appointmentToEdit.date, \r\n      time: appointmentToEdit.time, \r\n      doctor: appointmentToEdit.doctor \r\n    });\r\n    setEditingIndex(id); // Set the index of the appointment being edited\r\n  };\r\n\r\n  // Delete an appointment (DELETE request)\r\n  const deleteAppointment = (id) => {\r\n    axios.delete(`http://localhost:5000/api/appointments/${id}`)\r\n      .then(() => {\r\n        setAppointments(appointments.filter(appointment => appointment.id !== id));\r\n      })\r\n      .catch(error => console.error('Error deleting appointment:', error));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>Appointment Management</h1>\r\n      <div className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Patient Name\"\r\n          value={newAppointment.name}\r\n          onChange={(e) => setNewAppointment({ ...newAppointment, name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"Date\"\r\n          value={newAppointment.date}\r\n          onChange={(e) => setNewAppointment({ ...newAppointment, date: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"time\"\r\n          placeholder=\"Time\"\r\n          value={newAppointment.time}\r\n          onChange={(e) => setNewAppointment({ ...newAppointment, time: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Doctor\"\r\n          value={newAppointment.doctor}\r\n          onChange={(e) => setNewAppointment({ ...newAppointment, doctor: e.target.value })}\r\n        />\r\n        \r\n        {/* Conditionally render Add or Update button */}\r\n        {editingIndex === null ? (\r\n          <button onClick={addAppointment}>Add Appointment</button>\r\n        ) : (\r\n          <button onClick={updateAppointment}>Update Appointment</button>\r\n        )}\r\n      </div>\r\n\r\n      <ul>\r\n        {appointments.length === 0 ? (\r\n          <p>No appointments available</p>\r\n        ) : (\r\n          appointments.map((appointment) => (\r\n            <li key={appointment.id}>\r\n              {appointment.name} - {appointment.date} at {appointment.time} with {appointment.doctor}\r\n              <button onClick={() => editAppointment(appointment.id)}>Edit</button> {/* Load data into form */}\r\n              <button onClick={() => deleteAppointment(appointment.id)}>Delete</button> {/* DELETE */}\r\n            </li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}