{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARTHUR BALAJI R\\\\Desktop\\\\react\\\\ReactHospitalManagement1\\\\Frontend\\\\src\\\\components\\\\AppointmentManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentManagement() {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [newAppointment, setNewAppointment] = useState({\n    name: '',\n    date: '',\n    time: '',\n    doctor: ''\n  });\n\n  // Fetch appointments from the local API (GET request)\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/appointments').then(response => setAppointments(response.data)).catch(error => console.error('Error fetching appointments:', error));\n  }, []);\n\n  // Add a new appointment (POST request)\n  const addAppointment = () => {\n    axios.post('http://localhost:5000/api/appointments', newAppointment).then(response => {\n      setAppointments([...appointments, response.data]); // Add new appointment to the list\n      setNewAppointment({\n        name: '',\n        date: '',\n        time: '',\n        doctor: ''\n      }); // Reset the form\n    }).catch(error => console.error('Error adding appointment:', error));\n  };\n\n  // Update an appointment (PUT request)\n  const updateAppointment = id => {\n    const updatedAppointment = {\n      time: '1:00 PM'\n    }; // Example: update time to 1:00 PM\n    axios.put(`http://localhost:5000/api/appointments/${id}`, updatedAppointment).then(response => {\n      setAppointments(appointments.map(appointment => appointment.id === id ? response.data : appointment));\n    }).catch(error => console.error('Error updating appointment:', error));\n  };\n\n  // Delete an appointment (DELETE request)\n  const deleteAppointment = id => {\n    axios.delete(`http://localhost:5000/api/appointments/${id}`).then(() => {\n      setAppointments(appointments.filter(appointment => appointment.id !== id)); // Remove from list\n    }).catch(error => console.error('Error deleting appointment:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Appointment Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Patient Name\",\n        value: newAppointment.name,\n        onChange: e => setNewAppointment({\n          ...newAppointment,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Date\",\n        value: newAppointment.date,\n        onChange: e => setNewAppointment({\n          ...newAppointment,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"Time\",\n        value: newAppointment.time,\n        onChange: e => setNewAppointment({\n          ...newAppointment,\n          time: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Doctor\",\n        value: newAppointment.doctor,\n        onChange: e => setNewAppointment({\n          ...newAppointment,\n          doctor: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addAppointment,\n        children: \"Add Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appointments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No appointments available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) // Conditional rendering: show when no appointments exist\n      : appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [appointment.name, \" - \", appointment.date, \" at \", appointment.time, \" with \", appointment.doctor, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateAppointment(appointment.id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteAppointment(appointment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), \" \"]\n      }, appointment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentManagement, \"uPEoAZILI08/Kr1Bgzrj3WjVG6o=\");\n_c = AppointmentManagement;\nexport default AppointmentManagement;\nvar _c;\n$RefreshReg$(_c, \"AppointmentManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AppointmentManagement","_s","appointments","setAppointments","newAppointment","setNewAppointment","name","date","time","doctor","get","then","response","data","catch","error","console","addAppointment","post","updateAppointment","id","updatedAppointment","put","map","appointment","deleteAppointment","delete","filter","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/ARTHUR BALAJI R/Desktop/react/ReactHospitalManagement1/Frontend/src/components/AppointmentManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.css';\r\n\r\nfunction AppointmentManagement() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [newAppointment, setNewAppointment] = useState({ name: '', date: '', time: '', doctor: '' });\r\n\r\n  // Fetch appointments from the local API (GET request)\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/appointments')\r\n      .then(response => setAppointments(response.data))\r\n      .catch(error => console.error('Error fetching appointments:', error));\r\n  }, []);\r\n\r\n  // Add a new appointment (POST request)\r\n  const addAppointment = () => {\r\n    axios.post('http://localhost:5000/api/appointments', newAppointment)\r\n      .then(response => {\r\n        setAppointments([...appointments, response.data]); // Add new appointment to the list\r\n        setNewAppointment({ name: '', date: '', time: '', doctor: '' }); // Reset the form\r\n      })\r\n      .catch(error => console.error('Error adding appointment:', error));\r\n  };\r\n\r\n  // Update an appointment (PUT request)\r\n  const updateAppointment = (id) => {\r\n    const updatedAppointment = { time: '1:00 PM' }; // Example: update time to 1:00 PM\r\n    axios.put(`http://localhost:5000/api/appointments/${id}`, updatedAppointment)\r\n      .then(response => {\r\n        setAppointments(appointments.map(appointment => \r\n          appointment.id === id ? response.data : appointment\r\n        ));\r\n      })\r\n      .catch(error => console.error('Error updating appointment:', error));\r\n  };\r\n\r\n  // Delete an appointment (DELETE request)\r\n  const deleteAppointment = (id) => {\r\n    axios.delete(`http://localhost:5000/api/appointments/${id}`)\r\n      .then(() => {\r\n        setAppointments(appointments.filter(appointment => appointment.id !== id)); // Remove from list\r\n      })\r\n      .catch(error => console.error('Error deleting appointment:', error));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>Appointment Management</h1>\r\n      <div className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Patient Name\"\r\n          value={newAppointment.name}\r\n          onChange={(e) => setNewAppointment({ ...newAppointment, name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          placeholder=\"Date\"\r\n          value={newAppointment.date}\r\n          onChange={(e) => setNewAppointment({ ...newAppointment, date: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"time\"\r\n          placeholder=\"Time\"\r\n          value={newAppointment.time}\r\n          onChange={(e) => setNewAppointment({ ...newAppointment, time: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Doctor\"\r\n          value={newAppointment.doctor}\r\n          onChange={(e) => setNewAppointment({ ...newAppointment, doctor: e.target.value })}\r\n        />\r\n        <button onClick={addAppointment}>Add Appointment</button>\r\n      </div>\r\n\r\n      <ul>\r\n        {appointments.length === 0 ? (\r\n          <p>No appointments available</p> // Conditional rendering: show when no appointments exist\r\n        ) : (\r\n          appointments.map((appointment) => (\r\n            <li key={appointment.id}>\r\n              {appointment.name} - {appointment.date} at {appointment.time} with {appointment.doctor}\r\n              <button onClick={() => updateAppointment(appointment.id)}>Update</button> {/* PUT */}\r\n              <button onClick={() => deleteAppointment(appointment.id)}>Delete</button> {/* DELETE */}\r\n            </li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}